diff -u -r obs-studio-26.1.1/libobs/util/platform-nix.c obs-studio-26.1.1+OBS_CONFIG_PATH/libobs/util/platform-nix.c
--- obs-studio-26.1.1/libobs/util/platform-nix.c	2021-01-04 07:02:53.000000000 -0800
+++ obs-studio-26.1.1+OBS_CONFIG_PATH/libobs/util/platform-nix.c	2021-02-15 10:02:59.020036135 -0800
@@ -184,10 +184,20 @@
 	return ((uint64_t)ts.tv_sec * 1000000000ULL + (uint64_t)ts.tv_nsec);
 }
 
-/* should return $HOME/.[name], or when using XDG,
+/* should return $OBS_CONFIG_PATH if present or
+ * should return $HOME/.[name], or when using XDG,
  * should return $HOME/.config/[name] as default */
 int os_get_config_path(char *dst, size_t size, const char *name)
 {
+	char *config_env_ptr = getenv("OBS_CONFIG_PATH");
+
+	if (config_env_ptr != NULL) {
+		if (!name || !*name) {
+			return snprintf(dst, size, "%s", config_env_ptr);
+		} else {
+			return snprintf(dst, size, "%s/%s", config_env_ptr, name);
+		}
+	}
 #ifdef USE_XDG
 	char *xdg_ptr = getenv("XDG_CONFIG_HOME");
 
@@ -222,10 +232,21 @@
 #endif
 }
 
-/* should return $HOME/.[name], or when using XDG,
+/* should return $OBS_CONFIG_PATH if present or
+ * should return $HOME/.[name], or when using XDG,
  * should return $HOME/.config/[name] as default */
 char *os_get_config_path_ptr(const char *name)
 {
+	char *config_env_ptr = getenv("OBS_CONFIG_PATH");
+
+	if (config_env_ptr != NULL) {
+		struct dstr path;
+		dstr_init_copy(&path, config_env_ptr);
+		dstr_cat(&path, "/.");
+		dstr_cat(&path, name);
+		return path.array;
+	}
+
 #ifdef USE_XDG
 	struct dstr path;
 	char *xdg_ptr = getenv("XDG_CONFIG_HOME");
